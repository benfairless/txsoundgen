"""txsoundgen/audio.py"""

import logging

from pydub import AudioSegment

_logger = logging.getLogger(__name__)


class TXSoundData:
    """Class to encapsulate audio data and its properties.

    Args:
        data (bytes):
            The raw audio byte data.
        sample_rate (int, optional):
            The sample rate of the audio data. Defaults to 16000 Hz.
        sample_width (int, optional):
            The sample width in bytes. Defaults to 2 bytes (16-bit audio).
        sample_channels (int, optional):
            The number of audio channels. Defaults to 1 (mono).

    """

    def __init__(self, data, rate=16000, width=2, channels=1) -> None:
        """Initialize a TXSoundData instance."""
        self.data = data
        self.rate = rate
        self.width = width
        self.channels = channels

    def write_wav(self, file: str, output_rate=16000) -> str:
        """Write WAVE-encoded audio data to a file path, or file-like object.

        Creates mono-channel audio audio at 16kHz, which is what is typically supported
        by EdgeTX / OpenTX radios, and is output from audio generated by `Processor`
        objects.

        Args:
            file (string/file-like object):
                File path to write audio data to.
            output_rate (int, optional):
                The sample rate to write the audio data at. Defaults to 16000 Hz.

        Returns:
            string/file-like object: The file path or file-like object written to.

        """
        # Uses ffmpeg via pydub to write the WAV file
        # https://github.com/jiaaro/pydub/blob/master/API.markdown
        sound = AudioSegment(
            data=self.data,
            sample_width=self.width,
            frame_rate=self.rate,
            channels=self.channels,
        )
        sound.export(
            file,
            format="wav",
            bitrate="16k",
            parameters=["-ar", str(output_rate)],
        )
        _logger.debug('Wrote audio data to "%s"', str(file))
        return file
